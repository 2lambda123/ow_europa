vertex_program ow_terrain_vert glsl
{
  source ow_terrain.vert

  default_params
  {
    param_named_auto worldMatrix world_matrix
    param_named_auto worldViewMatrix worldview_matrix
    param_named_auto worldViewProjMatrix worldviewproj_matrix
    param_named_auto inverseViewMatrix inverse_view_matrix
    param_named_auto inverseTransposeWorldMatrix inverse_transpose_world_matrix
    param_named_auto inverseTransposeWorldViewMatrix inverse_transpose_worldview_matrix

    // shadow mapping (PSSM)
    param_named_auto texViewProjMatrix0 texture_viewproj_matrix 0
    param_named_auto texViewProjMatrix1 texture_viewproj_matrix 1
    param_named_auto texViewProjMatrix2 texture_viewproj_matrix 2

    param_named_auto wsSunPosition light_position 0
  }
}

fragment_program ow_terrain_frag glsl
{
  source ow_terrain.frag

  default_params
  {
    // shadow mapping (PSSM)
    param_named shadowMap0       int 0
    param_named shadowMap1       int 1
    param_named shadowMap2       int 2
    param_named_auto inverseShadowmapSize0 inverse_texture_size 0
    param_named_auto inverseShadowmapSize1 inverse_texture_size 1
    param_named_auto inverseShadowmapSize2 inverse_texture_size 2
    // This line is necessary when the world is very simple (e.g. just a ground plane and lander)
    //param_named pssmSplitPoints float4 16.7777 35.6558 100 0

    // texture references
    param_named irradianceMap    int 3
    param_named normalMap        int 4
    param_named detailNormalMap  int 5
  }
}

material ow/terrain
{
  technique
  {
    pass
    {
      vertex_program_ref ow_terrain_vert {}
      
      fragment_program_ref ow_terrain_frag {}

      texture_unit shadowMap0
      {
        content_type shadow
        tex_address_mode clamp
      }
      texture_unit shadowMap1
      {
        content_type shadow
        tex_address_mode clamp
      }
      texture_unit shadowMap2
      {
        content_type shadow
        tex_address_mode clamp
      }

      texture_unit ow_irradiance_environment_map {}

      texture_unit {
        texture terminator-normals.tif 2d
        filtering anisotropic anisotropic linear 
        max_anisotropy 16
        tex_address_mode wrap 
      }

      texture_unit {
        texture ice-normals.png 2d
        filtering anisotropic anisotropic linear 
        max_anisotropy 16
        tex_address_mode wrap 
      }
    }
  }
}

